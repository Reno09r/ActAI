"""add_milestone_model_and_update_related_tables

Revision ID: 3adb8d258b55
Revises: 432ec0210b8c
Create Date: 2025-05-24 16:36:11.281701

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '3adb8d258b55'
down_revision: Union[str, None] = '432ec0210b8c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('milestones',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('plan_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['plan_id'], ['plans.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('plans', sa.Column('estimated_duration_weeks', sa.Integer(), nullable=True))
    op.add_column('plans', sa.Column('weekly_commitment_hours', sa.String(length=50), nullable=True))
    op.add_column('plans', sa.Column('difficulty_level', sa.String(length=50), nullable=True))
    op.add_column('plans', sa.Column('prerequisites', sa.Text(), nullable=True))
    op.add_column('tasks', sa.Column('milestone_id', sa.Integer(), nullable=False))
    op.add_column('tasks', sa.Column('ai_suggestion', sa.Text(), nullable=True))
    op.create_foreign_key(None, 'tasks', 'milestones', ['milestone_id'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'tasks', type_='foreignkey')
    op.drop_column('tasks', 'ai_suggestion')
    op.drop_column('tasks', 'milestone_id')
    op.drop_column('plans', 'prerequisites')
    op.drop_column('plans', 'difficulty_level')
    op.drop_column('plans', 'weekly_commitment_hours')
    op.drop_column('plans', 'estimated_duration_weeks')
    op.drop_table('milestones')
    # ### end Alembic commands ###
